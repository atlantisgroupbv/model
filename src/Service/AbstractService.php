<?phpnamespace Atlantisgroupbv\Model\Service;use Atlantisgroupbv\Model\DataAccess\DataAccessInterface;use Psr\Log\LoggerInterface;use Symfony\Component\Stopwatch\Stopwatch;/** * class AbstractService * @package Atlantisgroupbv\Model\Service */abstract class AbstractService implements ServiceInterface{    /**     * @var DataAccessInterface     */    protected DataAccessInterface $dataAccess;    /**     * @var Stopwatch     */    protected Stopwatch $stopwatch;    /**     * @var bool     */    protected bool $debug = false;    /**     * @param DataAccessInterface $dataAccess     * @param bool $debug     */    public function __construct(DataAccessInterface $dataAccess, bool $debug = false)    {        $this->dataAccess = $dataAccess;        $this->dataAccess->setDebug($this->debug);    }    /**     * @param Stopwatch $stopwatch     * @return $this     */    public function setStopwatch(Stopwatch $stopwatch): AbstractService    {        $this->stopwatch = $stopwatch;        return $this;    }    public function setDebug(bool $debug): ServiceInterface    {        $this->debug = $debug;        $this->dataAccess->setDebug($debug);        return $this;    }}